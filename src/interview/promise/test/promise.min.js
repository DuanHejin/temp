"use strict";function Promise(e){if("function"!=typeof e)throw new TypeError("Promise resolver "+e+" is not a function");var t,o=this;o.state="pending",o.result=void 0,o.onfulfilledCallbacks=[],o.onrejectedCallbacks=[],t=function(e,t){"pending"===o.state&&(o.state=e,o.result=t,0===o.onfulfilledCallbacks.length&&0===o.onrejectedCallbacks.length||setTimeout(function(){for(var e="fulfilled"===o.state?o.onfulfilledCallbacks:o.onrejectedCallbacks,n=0,r=e.length;n<r;n++)(0,e[n])(t)}))};try{e(function(e){t("fulfilled",e)},function(e){t("rejected",e)})}catch(e){}}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},isPromise=function(e){return null!=e&&(!!/^function|object$/i.test(void 0===e?"undefined":_typeof(e))&&("function"==typeof e.then&&"function"==typeof e.catch))},handle=function(e,t,o,n){if(e===t)throw new TypeError("Chaining cycle detected for promise #<Promise>");if(isPromise(t))try{t.then(function(e){o(e)},n)}catch(e){n(e)}else o(t)};Promise.prototype={constructor:Promise,customType:!0,then:function(e,t){var o,n=this;return"function"!=typeof e&&(e=function(e){return e}),"function"!=typeof t&&(t=function(e){throw e}),o=new Promise(function(r,i){var c;switch(n.state){case"fulfilled":setTimeout(function(){try{c=e(n.result),handle(o,c,r,i)}catch(e){i(e)}});break;case"rejected":setTimeout(function(){try{c=t(n.result),handle(o,c,r,i)}catch(e){i(e)}});break;default:n.onfulfilledCallbacks.push(function(){try{c=e(n.result),handle(o,c,r,i)}catch(e){i(e)}}),n.onrejectedCallbacks.push(function(){try{c=t(n.result),handle(o,c,r,i)}catch(e){i(e)}})}})},catch:function(e){return this.then(null,e)},finally:function(){}},"undefined"!=typeof Symbol&&(Promise.prototype[Symbol.toStringTag]="Promise"),Promise.resolve=function(e){return new Promise(function(t,o){t(e)})},Promise.reject=function(){return new Promise(function(e,t){t(value)})},Promise.all=function(e){var t,o=!0,n=0,r=e.length,i=0,c=[];if("undefined"!=typeof Symbol?"function"!=typeof e[Symbol.iterator]&&(o=!1):Array.isArray(e)||(o=!1),!o)throw new TypeError(e+"is not iterable ");return new Promise(function(o,f){for(;n<r;n++)!function(n){t=e[n],isPromise(t)||(t=Promise.resolve(t)),t.then(function(e){i++,c[n]=e,i>=r&&o(c)},f)}(n)})},void 0!==window.Promise&&(window.Promise=Promise),"object"===("undefined"==typeof module?"undefined":_typeof(module))&&"object"===_typeof(module.exports)&&(module.exports=Promise);